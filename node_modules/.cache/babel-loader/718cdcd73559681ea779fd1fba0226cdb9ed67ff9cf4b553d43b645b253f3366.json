{"ast":null,"code":"var _jsxFileName = \"/Users/abdulazim/Documents/web_stuff/real-projects/toshmi-admin/src/components/Common/Table.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  columns,\n  data,\n  actions\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [columns.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: column.title\n        }, column.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }, this)), actions && /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Amallar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [columns.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: column.render ? column.render(row[column.key], row) : row[column.key]\n        }, column.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this)), actions && /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: actions(row)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Table","columns","data","actions","className","children","map","column","title","key","fileName","_jsxFileName","lineNumber","columnNumber","row","index","render","_c","$RefreshReg$"],"sources":["/Users/abdulazim/Documents/web_stuff/real-projects/toshmi-admin/src/components/Common/Table.jsx"],"sourcesContent":["import React from 'react';\n\nconst Table = ({ columns, data, actions }) => {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          {columns.map((column) => (\n            <th key={column.key}>{column.title}</th>\n          ))}\n          {actions && <th>Amallar</th>}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((row, index) => (\n          <tr key={index}>\n            {columns.map((column) => (\n              <td key={column.key}>\n                {column.render ? column.render(row[column.key], row) : row[column.key]}\n              </td>\n            ))}\n            {actions && (\n              <td>\n                <div className=\"actions\">\n                  {actions(row)}\n                </div>\n              </td>\n            )}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAC;EAAEC,OAAO;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAC5C,oBACEJ,OAAA;IAAOK,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACtBN,OAAA;MAAAM,QAAA,eACEN,OAAA;QAAAM,QAAA,GACGJ,OAAO,CAACK,GAAG,CAAEC,MAAM,iBAClBR,OAAA;UAAAM,QAAA,EAAsBE,MAAM,CAACC;QAAK,GAAzBD,MAAM,CAACE,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CACxC,CAAC,EACDV,OAAO,iBAAIJ,OAAA;UAAAM,QAAA,EAAI;QAAO;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRd,OAAA;MAAAM,QAAA,EACGH,IAAI,CAACI,GAAG,CAAC,CAACQ,GAAG,EAAEC,KAAK,kBACnBhB,OAAA;QAAAM,QAAA,GACGJ,OAAO,CAACK,GAAG,CAAEC,MAAM,iBAClBR,OAAA;UAAAM,QAAA,EACGE,MAAM,CAACS,MAAM,GAAGT,MAAM,CAACS,MAAM,CAACF,GAAG,CAACP,MAAM,CAACE,GAAG,CAAC,EAAEK,GAAG,CAAC,GAAGA,GAAG,CAACP,MAAM,CAACE,GAAG;QAAC,GAD/DF,MAAM,CAACE,GAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CACL,CAAC,EACDV,OAAO,iBACNJ,OAAA;UAAAM,QAAA,eACEN,OAAA;YAAKK,SAAS,EAAC,SAAS;YAAAC,QAAA,EACrBF,OAAO,CAACW,GAAG;UAAC;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACL;MAAA,GAZME,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACI,EAAA,GA/BIjB,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}