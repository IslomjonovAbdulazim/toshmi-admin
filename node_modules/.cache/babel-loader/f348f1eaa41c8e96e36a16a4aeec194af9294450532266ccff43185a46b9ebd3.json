{"ast":null,"code":"import { API_BASE_URL } from '../utils/constants';\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n  }\n  getAuthHeaders() {\n    const token = localStorage.getItem('token');\n    return {\n      'Content-Type': 'application/json',\n      ...(token && {\n        'Authorization': `Bearer ${token}`\n      })\n    };\n  }\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: this.getAuthHeaders(),\n      mode: 'cors',\n      // Add explicit CORS mode\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      if (!response.ok) {\n        if (response.status === 401) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          window.location.href = '/login';\n          return;\n        }\n        const errorData = await response.json().catch(() => ({}));\n        const errorMessage = errorData.detail || errorData.message || `HTTP ${response.status}`;\n        throw new Error(errorMessage);\n      }\n      return await response.json();\n    } catch (error) {\n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        throw new Error('Serverga ulanishda xatolik. Internet aloqasini tekshiring.');\n      }\n      console.error('API xatolik:', error);\n      throw error;\n    }\n  }\n\n  // Auth\n  async login(credentials) {\n    return this.request('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials)\n    });\n  }\n  async getCurrentUser() {\n    return this.request('/auth/me');\n  }\n\n  // Users\n  async getUsers(params = {}) {\n    const query = new URLSearchParams(params).toString();\n    return this.request(`/admin/users?${query}`);\n  }\n  async createUser(userData) {\n    return this.request('/admin/users', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n  }\n  async updateUser(userId, userData) {\n    return this.request(`/admin/users/${userId}`, {\n      method: 'PATCH',\n      body: JSON.stringify(userData)\n    });\n  }\n  async deleteUser(userId) {\n    return this.request(`/admin/users/${userId}`, {\n      method: 'DELETE'\n    });\n  }\n  async resetUserPassword(userId) {\n    return this.request(`/admin/users/${userId}/reset-password`, {\n      method: 'POST'\n    });\n  }\n\n  // Students\n  async searchStudents(params = {}) {\n    const query = new URLSearchParams(params).toString();\n    return this.request(`/admin/students/search?${query}`);\n  }\n  async createStudent(studentData) {\n    return this.request('/admin/students', {\n      method: 'POST',\n      body: JSON.stringify(studentData)\n    });\n  }\n\n  // Groups\n  async getGroups() {\n    return this.request('/admin/groups');\n  }\n  async createGroup(groupData) {\n    return this.request('/admin/groups', {\n      method: 'POST',\n      body: JSON.stringify(groupData)\n    });\n  }\n\n  // Subjects\n  async getSubjects() {\n    return this.request('/admin/subjects');\n  }\n  async createSubject(subjectData) {\n    return this.request('/admin/subjects', {\n      method: 'POST',\n      body: JSON.stringify(subjectData)\n    });\n  }\n\n  // Payments\n  async getPayments(params = {}) {\n    const query = new URLSearchParams(params).toString();\n    return this.request(`/admin/payments?${query}`);\n  }\n  async createPayment(paymentData) {\n    return this.request('/admin/payments', {\n      method: 'POST',\n      body: JSON.stringify(paymentData)\n    });\n  }\n  async updatePayment(paymentId, updateData) {\n    return this.request(`/admin/payments/${paymentId}`, {\n      method: 'PATCH',\n      body: JSON.stringify(updateData)\n    });\n  }\n\n  // News\n  async getNews() {\n    return this.request('/admin/news');\n  }\n  async createNews(newsData) {\n    return this.request('/admin/news', {\n      method: 'POST',\n      body: JSON.stringify(newsData)\n    });\n  }\n  async deleteNews(newsId) {\n    return this.request(`/admin/news/${newsId}`, {\n      method: 'DELETE'\n    });\n  }\n\n  // Reports\n  async getOverviewReport() {\n    return this.request('/admin/reports/overview');\n  }\n  async getClassReport(groupId, subjectId) {\n    return this.request(`/admin/reports/class?group_id=${groupId}&subject_id=${subjectId}`);\n  }\n  async getPaymentReport(month, year) {\n    return this.request(`/admin/reports/payments?month=${month}&year=${year}`);\n  }\n\n  // File upload\n  async uploadFile(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    const token = localStorage.getItem('token');\n    const response = await fetch(`${this.baseURL}/upload`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      },\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error('Fayl yuklashda xatolik');\n    }\n    return await response.json();\n  }\n}\nconst apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","ApiService","constructor","baseURL","getAuthHeaders","token","localStorage","getItem","request","endpoint","options","url","config","headers","mode","response","fetch","ok","status","removeItem","window","location","href","errorData","json","catch","errorMessage","detail","message","Error","error","name","includes","console","login","credentials","method","body","JSON","stringify","getCurrentUser","getUsers","params","query","URLSearchParams","toString","createUser","userData","updateUser","userId","deleteUser","resetUserPassword","searchStudents","createStudent","studentData","getGroups","createGroup","groupData","getSubjects","createSubject","subjectData","getPayments","createPayment","paymentData","updatePayment","paymentId","updateData","getNews","createNews","newsData","deleteNews","newsId","getOverviewReport","getClassReport","groupId","subjectId","getPaymentReport","month","year","uploadFile","file","formData","FormData","append","apiService"],"sources":["/Users/abdulazim/Documents/web_stuff/real-projects/toshmi-admin/src/services/api.js"],"sourcesContent":["import { API_BASE_URL } from '../utils/constants';\n\nclass ApiService {\n  constructor() {\n    this.baseURL = API_BASE_URL;\n  }\n\n  getAuthHeaders() {\n    const token = localStorage.getItem('token');\n    return {\n      'Content-Type': 'application/json',\n      ...(token && { 'Authorization': `Bearer ${token}` })\n    };\n  }\n\n  async request(endpoint, options = {}) {\n    const url = `${this.baseURL}${endpoint}`;\n    const config = {\n      headers: this.getAuthHeaders(),\n      mode: 'cors', // Add explicit CORS mode\n      ...options\n    };\n\n    try {\n      const response = await fetch(url, config);\n      \n      if (!response.ok) {\n        if (response.status === 401) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          window.location.href = '/login';\n          return;\n        }\n        const errorData = await response.json().catch(() => ({}));\n        const errorMessage = errorData.detail || errorData.message || `HTTP ${response.status}`;\n        throw new Error(errorMessage);\n      }\n\n      return await response.json();\n    } catch (error) {\n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        throw new Error('Serverga ulanishda xatolik. Internet aloqasini tekshiring.');\n      }\n      console.error('API xatolik:', error);\n      throw error;\n    }\n  }\n\n  // Auth\n  async login(credentials) {\n    return this.request('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify(credentials)\n    });\n  }\n\n  async getCurrentUser() {\n    return this.request('/auth/me');\n  }\n\n  // Users\n  async getUsers(params = {}) {\n    const query = new URLSearchParams(params).toString();\n    return this.request(`/admin/users?${query}`);\n  }\n\n  async createUser(userData) {\n    return this.request('/admin/users', {\n      method: 'POST',\n      body: JSON.stringify(userData)\n    });\n  }\n\n  async updateUser(userId, userData) {\n    return this.request(`/admin/users/${userId}`, {\n      method: 'PATCH',\n      body: JSON.stringify(userData)\n    });\n  }\n\n  async deleteUser(userId) {\n    return this.request(`/admin/users/${userId}`, {\n      method: 'DELETE'\n    });\n  }\n\n  async resetUserPassword(userId) {\n    return this.request(`/admin/users/${userId}/reset-password`, {\n      method: 'POST'\n    });\n  }\n\n  // Students\n  async searchStudents(params = {}) {\n    const query = new URLSearchParams(params).toString();\n    return this.request(`/admin/students/search?${query}`);\n  }\n\n  async createStudent(studentData) {\n    return this.request('/admin/students', {\n      method: 'POST',\n      body: JSON.stringify(studentData)\n    });\n  }\n\n  // Groups\n  async getGroups() {\n    return this.request('/admin/groups');\n  }\n\n  async createGroup(groupData) {\n    return this.request('/admin/groups', {\n      method: 'POST',\n      body: JSON.stringify(groupData)\n    });\n  }\n\n  // Subjects\n  async getSubjects() {\n    return this.request('/admin/subjects');\n  }\n\n  async createSubject(subjectData) {\n    return this.request('/admin/subjects', {\n      method: 'POST',\n      body: JSON.stringify(subjectData)\n    });\n  }\n\n  // Payments\n  async getPayments(params = {}) {\n    const query = new URLSearchParams(params).toString();\n    return this.request(`/admin/payments?${query}`);\n  }\n\n  async createPayment(paymentData) {\n    return this.request('/admin/payments', {\n      method: 'POST',\n      body: JSON.stringify(paymentData)\n    });\n  }\n\n  async updatePayment(paymentId, updateData) {\n    return this.request(`/admin/payments/${paymentId}`, {\n      method: 'PATCH',\n      body: JSON.stringify(updateData)\n    });\n  }\n\n  // News\n  async getNews() {\n    return this.request('/admin/news');\n  }\n\n  async createNews(newsData) {\n    return this.request('/admin/news', {\n      method: 'POST',\n      body: JSON.stringify(newsData)\n    });\n  }\n\n  async deleteNews(newsId) {\n    return this.request(`/admin/news/${newsId}`, {\n      method: 'DELETE'\n    });\n  }\n\n  // Reports\n  async getOverviewReport() {\n    return this.request('/admin/reports/overview');\n  }\n\n  async getClassReport(groupId, subjectId) {\n    return this.request(`/admin/reports/class?group_id=${groupId}&subject_id=${subjectId}`);\n  }\n\n  async getPaymentReport(month, year) {\n    return this.request(`/admin/reports/payments?month=${month}&year=${year}`);\n  }\n\n  // File upload\n  async uploadFile(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    const token = localStorage.getItem('token');\n    const response = await fetch(`${this.baseURL}/upload`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      },\n      body: formData\n    });\n\n    if (!response.ok) {\n      throw new Error('Fayl yuklashda xatolik');\n    }\n\n    return await response.json();\n  }\n}\n\nconst apiService = new ApiService();\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}