{"ast":null,"code":"import api from'./api';export const assignmentService={// Get all assignments\ngetAllAssignments:async()=>{try{const response=await api.get('/admin/assignments');return response;}catch(error){console.error('Failed to get assignments:',error);throw error;}},// Get unassigned subjects (subjects without teachers)\ngetUnassignedSubjects:async()=>{try{const response=await api.get('/admin/assignments/unassigned');return response;}catch(error){console.error('Failed to get unassigned subjects:',error);throw error;}},// Create new assignment (assign teacher to group-subject)\nassignTeacher:async assignmentData=>{try{const response=await api.post('/admin/assign-teacher',assignmentData);return response;}catch(error){console.error('Assignment creation failed:',error);throw error;}},// Remove assignment completely\nremoveAssignment:async groupSubjectId=>{try{const response=await api.delete(\"/admin/assignments/\".concat(groupSubjectId));return response;}catch(error){console.error('Failed to remove assignment:',error);throw error;}},// Remove assignment by group and subject IDs\nremoveAssignmentByParams:async(groupId,subjectId)=>{try{const response=await api.delete('/admin/assignments/by-params',{data:{group_id:groupId,subject_id:subjectId}});return response;}catch(error){console.error('Failed to remove assignment by params:',error);throw error;}},// Change teacher for existing assignment\nchangeTeacher:async(groupSubjectId,newTeacherId)=>{try{const response=await api.put(\"/admin/assignments/\".concat(groupSubjectId,\"/teacher\"),{new_teacher_id:newTeacherId});return response;}catch(error){console.error('Failed to change teacher:',error);throw error;}},// Change subject for existing assignment\nchangeSubject:async(groupSubjectId,newSubjectId)=>{try{const response=await api.put(\"/admin/assignments/\".concat(groupSubjectId,\"/subject\"),{new_subject_id:newSubjectId});return response;}catch(error){console.error('Failed to change subject:',error);throw error;}},// Unassign teacher (keep subject but remove teacher)\nunassignTeacher:async groupSubjectId=>{try{const response=await api.put(\"/admin/assignments/\".concat(groupSubjectId,\"/unassign-teacher\"));return response;}catch(error){console.error('Failed to unassign teacher:',error);throw error;}},// Helper: Get assignment statistics\ngetAssignmentStats:assignments=>{const stats={totalAssignments:assignments.length,assignedCount:assignments.filter(a=>a.has_teacher).length,unassignedCount:assignments.filter(a=>!a.has_teacher).length,activeTeachers:new Set(assignments.filter(a=>a.teacher&&a.teacher.is_active).map(a=>a.teacher.id)).size,groupsCovered:new Set(assignments.map(a=>a.group.id)).size,subjectsCovered:new Set(assignments.map(a=>a.subject.id)).size};// Group by academic year\nconst byYear=assignments.reduce((acc,assignment)=>{const year=assignment.group.academic_year;if(!acc[year])acc[year]=0;acc[year]++;return acc;},{});stats.byAcademicYear=byYear;return stats;}};","map":{"version":3,"names":["api","assignmentService","getAllAssignments","response","get","error","console","getUnassignedSubjects","assignTeacher","assignmentData","post","removeAssignment","groupSubjectId","delete","concat","removeAssignmentByParams","groupId","subjectId","data","group_id","subject_id","changeTeacher","newTeacherId","put","new_teacher_id","changeSubject","newSubjectId","new_subject_id","unassignTeacher","getAssignmentStats","assignments","stats","totalAssignments","length","assignedCount","filter","a","has_teacher","unassignedCount","activeTeachers","Set","teacher","is_active","map","id","size","groupsCovered","group","subjectsCovered","subject","byYear","reduce","acc","assignment","year","academic_year","byAcademicYear"],"sources":["/Users/abdulazim/Documents/web_stuff/real-projects/toshmi-admin/src/services/assignmentService.js"],"sourcesContent":["import api from './api';\n\nexport const assignmentService = {\n  // Get all assignments\n  getAllAssignments: async () => {\n    try {\n      const response = await api.get('/admin/assignments');\n      return response;\n    } catch (error) {\n      console.error('Failed to get assignments:', error);\n      throw error;\n    }\n  },\n\n  // Get unassigned subjects (subjects without teachers)\n  getUnassignedSubjects: async () => {\n    try {\n      const response = await api.get('/admin/assignments/unassigned');\n      return response;\n    } catch (error) {\n      console.error('Failed to get unassigned subjects:', error);\n      throw error;\n    }\n  },\n\n  // Create new assignment (assign teacher to group-subject)\n  assignTeacher: async (assignmentData) => {\n    try {\n      const response = await api.post('/admin/assign-teacher', assignmentData);\n      return response;\n    } catch (error) {\n      console.error('Assignment creation failed:', error);\n      throw error;\n    }\n  },\n\n  // Remove assignment completely\n  removeAssignment: async (groupSubjectId) => {\n    try {\n      const response = await api.delete(`/admin/assignments/${groupSubjectId}`);\n      return response;\n    } catch (error) {\n      console.error('Failed to remove assignment:', error);\n      throw error;\n    }\n  },\n\n  // Remove assignment by group and subject IDs\n  removeAssignmentByParams: async (groupId, subjectId) => {\n    try {\n      const response = await api.delete('/admin/assignments/by-params', {\n        data: { group_id: groupId, subject_id: subjectId }\n      });\n      return response;\n    } catch (error) {\n      console.error('Failed to remove assignment by params:', error);\n      throw error;\n    }\n  },\n\n  // Change teacher for existing assignment\n  changeTeacher: async (groupSubjectId, newTeacherId) => {\n    try {\n      const response = await api.put(`/admin/assignments/${groupSubjectId}/teacher`, {\n        new_teacher_id: newTeacherId\n      });\n      return response;\n    } catch (error) {\n      console.error('Failed to change teacher:', error);\n      throw error;\n    }\n  },\n\n  // Change subject for existing assignment\n  changeSubject: async (groupSubjectId, newSubjectId) => {\n    try {\n      const response = await api.put(`/admin/assignments/${groupSubjectId}/subject`, {\n        new_subject_id: newSubjectId\n      });\n      return response;\n    } catch (error) {\n      console.error('Failed to change subject:', error);\n      throw error;\n    }\n  },\n\n  // Unassign teacher (keep subject but remove teacher)\n  unassignTeacher: async (groupSubjectId) => {\n    try {\n      const response = await api.put(`/admin/assignments/${groupSubjectId}/unassign-teacher`);\n      return response;\n    } catch (error) {\n      console.error('Failed to unassign teacher:', error);\n      throw error;\n    }\n  },\n\n  // Helper: Get assignment statistics\n  getAssignmentStats: (assignments) => {\n    const stats = {\n      totalAssignments: assignments.length,\n      assignedCount: assignments.filter(a => a.has_teacher).length,\n      unassignedCount: assignments.filter(a => !a.has_teacher).length,\n      activeTeachers: new Set(\n        assignments\n          .filter(a => a.teacher && a.teacher.is_active)\n          .map(a => a.teacher.id)\n      ).size,\n      groupsCovered: new Set(assignments.map(a => a.group.id)).size,\n      subjectsCovered: new Set(assignments.map(a => a.subject.id)).size\n    };\n\n    // Group by academic year\n    const byYear = assignments.reduce((acc, assignment) => {\n      const year = assignment.group.academic_year;\n      if (!acc[year]) acc[year] = 0;\n      acc[year]++;\n      return acc;\n    }, {});\n\n    stats.byAcademicYear = byYear;\n    return stats;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}