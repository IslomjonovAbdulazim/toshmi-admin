{"ast":null,"code":"import api from'./api';export const scheduleService={getAll:async()=>{return await api.get('/admin/schedule');},getById:async id=>{return await api.get(\"/admin/schedule/\".concat(id));},create:async data=>{return await api.post('/admin/schedule',data);},update:async(id,data)=>{return await api.put(\"/admin/schedule/\".concat(id),data);},delete:async id=>{return await api.delete(\"/admin/schedule/\".concat(id));},// Helper method to get schedules by group\ngetByGroup:async groupId=>{const response=await api.get('/admin/schedule');return response.data.filter(schedule=>schedule.group_id===groupId);},// Helper method to format day names\ngetDayName:dayIndex=>{const days=['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];return days[dayIndex]||'Invalid Day';},// Helper method to format time\nformatTime:timeString=>{if(!timeString)return'';return timeString.slice(0,5);// Convert \"HH:MM:SS\" to \"HH:MM\"\n}};","map":{"version":3,"names":["api","scheduleService","getAll","get","getById","id","concat","create","data","post","update","put","delete","getByGroup","groupId","response","filter","schedule","group_id","getDayName","dayIndex","days","formatTime","timeString","slice"],"sources":["/Users/abdulazim/Documents/web_stuff/real-projects/toshmi-admin/src/services/scheduleService.js"],"sourcesContent":["import api from './api';\n\nexport const scheduleService = {\n  getAll: async () => {\n    return await api.get('/admin/schedule');\n  },\n\n  getById: async (id) => {\n    return await api.get(`/admin/schedule/${id}`);\n  },\n\n  create: async (data) => {\n    return await api.post('/admin/schedule', data);\n  },\n\n  update: async (id, data) => {\n    return await api.put(`/admin/schedule/${id}`, data);\n  },\n\n  delete: async (id) => {\n    return await api.delete(`/admin/schedule/${id}`);\n  },\n\n  // Helper method to get schedules by group\n  getByGroup: async (groupId) => {\n    const response = await api.get('/admin/schedule');\n    return response.data.filter(schedule => schedule.group_id === groupId);\n  },\n\n  // Helper method to format day names\n  getDayName: (dayIndex) => {\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    return days[dayIndex] || 'Invalid Day';\n  },\n\n  // Helper method to format time\n  formatTime: (timeString) => {\n    if (!timeString) return '';\n    return timeString.slice(0, 5); // Convert \"HH:MM:SS\" to \"HH:MM\"\n  }\n};"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAEvB,MAAO,MAAM,CAAAC,eAAe,CAAG,CAC7BC,MAAM,CAAE,KAAAA,CAAA,GAAY,CAClB,MAAO,MAAM,CAAAF,GAAG,CAACG,GAAG,CAAC,iBAAiB,CAAC,CACzC,CAAC,CAEDC,OAAO,CAAE,KAAO,CAAAC,EAAE,EAAK,CACrB,MAAO,MAAM,CAAAL,GAAG,CAACG,GAAG,oBAAAG,MAAA,CAAoBD,EAAE,CAAE,CAAC,CAC/C,CAAC,CAEDE,MAAM,CAAE,KAAO,CAAAC,IAAI,EAAK,CACtB,MAAO,MAAM,CAAAR,GAAG,CAACS,IAAI,CAAC,iBAAiB,CAAED,IAAI,CAAC,CAChD,CAAC,CAEDE,MAAM,CAAE,KAAAA,CAAOL,EAAE,CAAEG,IAAI,GAAK,CAC1B,MAAO,MAAM,CAAAR,GAAG,CAACW,GAAG,oBAAAL,MAAA,CAAoBD,EAAE,EAAIG,IAAI,CAAC,CACrD,CAAC,CAEDI,MAAM,CAAE,KAAO,CAAAP,EAAE,EAAK,CACpB,MAAO,MAAM,CAAAL,GAAG,CAACY,MAAM,oBAAAN,MAAA,CAAoBD,EAAE,CAAE,CAAC,CAClD,CAAC,CAED;AACAQ,UAAU,CAAE,KAAO,CAAAC,OAAO,EAAK,CAC7B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAf,GAAG,CAACG,GAAG,CAAC,iBAAiB,CAAC,CACjD,MAAO,CAAAY,QAAQ,CAACP,IAAI,CAACQ,MAAM,CAACC,QAAQ,EAAIA,QAAQ,CAACC,QAAQ,GAAKJ,OAAO,CAAC,CACxE,CAAC,CAED;AACAK,UAAU,CAAGC,QAAQ,EAAK,CACxB,KAAM,CAAAC,IAAI,CAAG,CAAC,QAAQ,CAAE,SAAS,CAAE,WAAW,CAAE,UAAU,CAAE,QAAQ,CAAE,UAAU,CAAE,QAAQ,CAAC,CAC3F,MAAO,CAAAA,IAAI,CAACD,QAAQ,CAAC,EAAI,aAAa,CACxC,CAAC,CAED;AACAE,UAAU,CAAGC,UAAU,EAAK,CAC1B,GAAI,CAACA,UAAU,CAAE,MAAO,EAAE,CAC1B,MAAO,CAAAA,UAAU,CAACC,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE;AACjC,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}